Eva is trying to make her own color stripe out of a given one. She would like to keep only her favorite colors in her favorite order by cutting off those unwanted pieces and sewing the remaining parts together to form her favorite color stripe.

It is said that a normal human eye can distinguish about less than 200 different colors, so Eva's favorite colors are limited. However the original stripe could be very long, and Eva would like to have the remaining favorite stripe with the maximum length. So she needs your help to find her the best result.

Note that the solution might not be unique, but you only have to tell her the maximum length. For example, given a stripe of colors {2 2 4 1 5 5 6 3 1 1 5 6}. If Eva's favorite colors are given in her favorite order as {2 3 1 5 6}, then she has 4 possible best solutions {2 2 1 1 1 5 6}, {2 2 1 5 5 5 6}, {2 2 1 5 5 6 6}, and {2 2 3 1 1 5 6}.

Input Specification:

Each input file contains one test case. For each case, the first line contains a positive integer N (≤200) which is the total number of colors involved (and hence the colors are numbered from 1 to N). Then the next line starts with a positive integer M (≤200) followed by M Eva's favorite color numbers given in her favorite order. Finally the third line starts with a positive integer L (≤10​4​​) which is the length of the given stripe, followed by L colors on the stripe. All the numbers in a line a separated by a space.

Output Specification:

For each test case, simply print in a line the maximum length of Eva's favorite stripe.

Sample Input:

65 2 3 1 5 612 2 2 4 1 5 5 6 3 1 1 5 6

Sample Output:

7


题意：给定n种颜色，再给出eva喜欢的颜色序列，然后让你在给出的颜色序列中，找出eva喜欢的颜色序列的最大长度。

思路：本题可抽象成最长不下降子序列问题，首先将eva喜欢的颜色序列按顺序编号，然后把给定序列中eva不喜欢的颜色剔除掉，再使用动态规划求最大长度。令dp[i]表示以a[i]结尾的颜色序列的最大长度 ，对于每一个i，令j从0到i遍历，状态转移方程为：dp[i]=max(dp[i],dp[j]+1).

参考代码：
#include<cstdio>
#include<vector>
using namespace std;
const int maxn=10010;
int book[210],a[maxn],dp[maxn];
int main()
{
	int n,m,x,l,num=0,ans=0;
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++){
		scanf("%d",&x);
		book[x]=i;
	}
	scanf("%d",&l);
	for(int i=0;i<l;i++){
		scanf("%d",&x);
		if(book[x]>0)
			a[num++]=book[x];	//直接把颜色序号放入数组a中
	}
	for(int i=0;i<num;i++){
		dp[i]=1;
		for(int j=0;j<i;j++){
			if(a[i]>=a[j])
				dp[i]=max(dp[i],dp[j]+1);
		}
		ans=max(dp[i],ans);
	}
	printf("%d\n",ans);
	return 0;
}
--------------------- 
