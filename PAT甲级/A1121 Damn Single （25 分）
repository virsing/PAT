"Damn Single (单身狗)" is the Chinese nickname for someone who is being single. You are supposed to find those who are alone in a big party, so they can be taken care of.

Input Specification:

Each input file contains one test case. For each case, the first line gives a positive integer N (≤ 50,000), the total number of couples. Then N lines of the couples follow, each gives a couple of ID's which are 5-digit numbers (i.e. from 00000 to 99999). After the list of couples, there is a positive integer M (≤ 10,000) followed by M ID's of the party guests. The numbers are separated by spaces. It is guaranteed that nobody is having bigamous marriage (重婚) or dangling with more than one companion.

Output Specification:

First print in a line the total number of lonely guests. Then in the next line, print their ID's in increasing order. The numbers must be separated by exactly 1 space, and there must be no extra space at the end of the line.

Sample Input:

311111 2222233333 4444455555 66666755555 44444 10000 88888 22222 11111 23333

Sample Output:

510000 23333 44444 55555 88888

题意：给出n对情侣的编号，再给出m个出席活动的人编号，让你找出这m个人中的单身人士，如果某个到场的人，他情侣没来，也算作单身人士。

思路：使用两个数组，其中couple[]标记配偶的id，初始全为-1，arrive[]数组标记是否到场，输入完毕后，第一次遍历如果有人没有配偶或者其配偶未到场，则统计单身的计数器num加一，第二次遍历输出这些单身人士id。

参考代码：
--------------------- 
#include<cstdio>
#include<cstring>
using namespace std;
int n,a,b,q,num=0,couple[100010],arrive[100010];
int main()
{
	scanf("%d",&n);
	memset(couple,-1,sizeof(couple));
	for(int i=0;i<n;i++){
		scanf("%d %d",&a,&b);
		couple[a]=b;
		couple[b]=a;
	}
	scanf("%d",&q);
	for(int i=0;i<q;i++){
		scanf("%d",&a);
		arrive[a]=1;
	}
	for(int i=0;i<100000;i++){
		if(arrive[i]&&(couple[i]==-1||(arrive[couple[i]]==0)))	//此人到场，且无配偶或配偶未到，则num+1
			num++;
	}
	printf("%d\n",num);
	for(int i=0;i<100000&&num;i++){
		if(!arrive[i]) continue;
		if(couple[i]==-1||(arrive[couple[i]]==0)){
			printf("%05d",i);
			num--;
			if(num) printf(" ");
		}
	}
	return 0;
}
