批改多选题是比较麻烦的事情，有很多不同的计分方法。有一种最常见的计分方法是：如果考生选择了部分正确选项，并且没有选择任何错误选项，则得到 50% 分数；如果考生选择了任何一个错误的选项，则不能得分。本题就请你写个程序帮助老师批改多选题，并且指出哪道题的哪个选项错的人最多。

输入格式：

输入在第一行给出两个正整数 N（≤1000）和 M（≤100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 (选中的选项个数 选项1 ……)，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。

输出格式：

按照输入的顺序给出每个学生的得分，每个分数占一行，输出小数点后 1 位。最后输出错得最多的题目选项的信息，格式为：错误次数 题目编号（题目按照输入的顺序从1开始编号）-选项号。如果有并列，则每行一个选项，按题目编号递增顺序输出；再并列则按选项号递增顺序输出。行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 Too simple。

输入样例 1：

3 4 3 4 2 a c2 5 1 b5 3 2 b c1 5 4 a b d e(2 a c) (3 b d e) (2 a c) (3 a b e)(2 a c) (1 b) (2 a b) (4 a b d e)(2 b d) (1 e) (1 c) (4 a b c d)

输出样例 1：

3.56.02.52 2-e2 3-a2 3-b

输入样例 2：

2 2 3 4 2 a c2 5 1 b(2 a c) (1 b)(2 a c) (1 b)

输出样例 2：

5.05.0Too simple

思路：首先为题目定义一个结构体 

struct node{	int num,full_score,cnt[6];	//num为答案总数，cnt记录选项错误次数	vector<char> v;			//存放正确选项}q[110];

 然后使用getline（）一次读取一行，然后逐个题目处理，注意：选错和漏选都会导致该选项错误次数+1，因此处理时，可以使用一个数组，每个正确答案使数组中对应项数值-1，学生的每个选项使对应项数值-1，这样最终该数组中的每个正数都是错选，每个复数都是漏选，以此标记是否应该加一半分，该功能单独定义一个函数deal（）处理。

参考代码：
--------------------- 
#include<cstdio>
#include<vector>
#include<iostream>
#include<cstring>
using namespace std;
int n,m,t,max_wrong=0;
vector<int> ans;
struct node{
	int num,full_score,cnt[6];	//num为答案总数，cnt记录选项错误次数
	vector<char> v;			//存放正确选项
}q[110];
double deal(int idx,vector<char> stu){
	bool flag=true;		//标记是否要得一半分，即不多选
	int a[6];			//用来统计选项错误次数，
	memset(a,0,sizeof(a));
	if(q[idx].v==stu) return q[idx].full_score;
	else{
		for(int i=0;i<stu.size();i++){
			char c=stu[i];
			a[c-'a']++;		//若学生选择了该选项，对应数值++
		}
		for(int i=0;i<q[idx].v.size();i++){
			char c=q[idx].v[i];		//若答案中有该选项对应数值--
			a[c-'a']--;
		}
		for(int i=0;i<6;i++){		//因此，如果a中有正数说明多选了，有负数说明漏选了
			if(a[i]>0)		//大于0，说明多选了，不得分flag=false
				flag=false;				
			if(a[i]!=0) {
				q[idx].cnt[i]++;
				max_wrong=max(max_wrong,q[idx].cnt[i]);
			}
		}
		if(flag) return q[idx].full_score/2.0;
		else return 0;
	}
}
int main()
{
	string s;
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++){
		scanf("%d%d%d",&q[i].full_score,&q[i].num,&t);
		char c;
		for(int j=0;j<t;j++){
			scanf(" %c",&c);
			q[i].v.push_back(c);
		}
	}
	getchar();			//这里必须用getchar接受换行符
	for(int i=0;i<n;i++){
		getline(cin,s);
		double score=0;	//score记录学生分数，idx记录题号
		int idx=-1;		
		for(int j=0;j<s.size();j++){
			if(s[j]=='('){
				idx++;				//每次碰到‘（’接下来题号加一
				vector<char> v;			//存放学生的选项
				while(j<s.size()&&s[j]!=')'){
					if(s[j]>='a'&&s[j]<='g')
						v.push_back(s[j]);
					j++;
				}
				score+=deal(idx,v);
			}
		}
		printf("%.1f\n",score);
	}
	if(!max_wrong) printf("Too simple\n");
	else{
		for(int i=0;i<m;i++){
			for(int j=0;j<q[i].num;j++){

				if(q[i].cnt[j]==max_wrong)
					printf("%d %d-%c\n",max_wrong,i+1,j+'a');
			}
		}
	}
	return 0;
}
