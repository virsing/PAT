小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。

为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。



图 1

输入格式：

每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。

输出格式：

如果可以买，则在一行中输出 Yes 以及有多少多余的珠子；如果不可以买，则在一行中输出 No 以及缺了多少珠子。其间以 1 个空格分隔。

输入样例 1：

ppRYYGrrYBR2258YrR8RrY

输出样例 1：

Yes 8


输入样例 2：

ppRYYGrrYB225YrR8RrY

输出样例 2：

No 2


思路：首先对第一个串做哈希表，统计每一种珠子的个数，然后对第二个串中的每个珠子，都让哈希表中对应数值减一，遍历完毕后，分别统计哈希表中的正数和负数值，如果出现了负数说明缺少小红喜欢的珠子， 输出No，否则输出Yes。

参考代码 ：
--------------------- 
#include<cstdio>
#include<string>
#include<iostream>
using namespace std;
int hasht[200];
int main()
{
	int remain=0,need=0;
	string s;
	cin>>s;
	for(int i=0;i<s.size();i++)
		hasht[s[i]]++;
	cin>>s;
	for(int i=0;i<s.size();i++)
		hasht[s[i]]--;
	for(int i=0;i<200;i++){
		if(hasht[i]>=0)
			remain+=hasht[i];
		else need-=hasht[i];
	}
	if(need) printf("No %d\n",need);
	else printf("Yes %d\n",remain);
	return 0;
}
