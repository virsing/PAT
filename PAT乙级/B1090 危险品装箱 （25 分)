集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。

本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。

输入格式：

输入第一行给出两个正整数：N (≤10​4​​) 是成对的不相容物品的对数；M (≤100) 是集装箱货品清单的单数。

随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：

K G[1] G[2] ... G[K]


其中 K (≤1000) 是物品件数，G[i] 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。

输出格式：

对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 Yes，否则输出 No。

输入样例：

6 320001 2000220003 2000420005 2000620003 2000120005 2000420004 200064 00001 20004 00002 200035 98823 20002 20003 20006 100103 12345 67890 23333

输出样例：

NoYesYes

思路：首先建立一个二维vector数组h[100010]， 用来存放每个物品idx对应的不相容物品清单。

接下来对于每一个给定列表，使用数组list[]存放已出现的物品，并且对列表中每一件物品都检查其对应的不相容物品是否在list出现过，如果出现过则不安全，输出no，否则输出yes。

参考代码：
--------------------- 
#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
int n,m,List[100010];
vector<int> h[100010];
int main()
{
	int u,v,num;
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++){
		scanf("%d%d",&u,&v);
		h[u].push_back(v);
		h[v].push_back(u);
	}
	for(int i=0;i<m;i++){
		scanf("%d",&num);
		bool flag=true;
		memset(List,0,sizeof(List));
		for(int j=0;j<num;j++){
			scanf("%d",&u);
			List[u]=1;
			for(auto it=h[u].begin();it!=h[u].end()&&flag;it++){	//对于每一件当前物品，检查其对应的不相容物品是否在列表中出现
				if(List[*it]==1)
					flag=false;
			}
		}
		if(flag) printf("Yes\n");
		else printf("No\n");
	}
	return 0;
}
