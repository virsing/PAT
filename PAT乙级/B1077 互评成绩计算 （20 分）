在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G​1​​；老师给这个组的评分记为 G​2​​。该组得分为 (G​1​​+G​2​​)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。

输入格式：

输入第一行给出两个正整数 N（> 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N−1 个是其他组给的评分。合法的输入应该是 [0,M] 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。

输出格式：

为每个组输出其最终得分。每个得分占一行。

输入样例：

6 5042 49 49 35 38 4136 51 50 28 -1 3040 36 41 33 47 4930 250 -25 27 45 3148 0 0 50 50 123443 41 36 29 42 29

输出样例：

423341313739

思路： 将一个学生的分数全部读取后，去掉最高地和最低分，算出剩余有效成绩的平均值，然后和老师的评分再取平均值输出，注意浮点数转整形数出是直接舍弃小数的，因此需要+0.5.

参考代码：
--------------------- 
#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
int n,m;
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++){
		int G1=0,G2=0,t,cnt=0;		//cnt统计有效分数的个数
		double score=0;
		vector<int> v;
		for(int j=0;j<n;j++){
			if(j==0) scanf("%d",&G2);
			else {
				scanf("%d",&t);
				if(t>=0&&t<=m){
					v.push_back(t);
					cnt++;
				}
			}
		}
		sort(v.begin(),v.end());
		for(int i=1;i<v.size()-1;i++)
			G1+=v[i];
		score=(1.0*G1/(cnt-2)+G2)/2;
		printf("%d\n",(int)(score+0.5));
	}
	return 0;
}
