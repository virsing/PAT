字符串 APPAPT 中包含了两个单词 PAT，其中第一个 PAT 是第 2 位(P)，第 4 位(A)，第 6 位(T)；第二个 PAT 是第 3 位(P)，第 4 位(A)，第 6 位(T)。

现给定字符串，问一共可以形成多少个 PAT？

输入格式：

输入只有一行，包含一个字符串，长度不超过10​5​​，只包含 P、A、T 三种字母。

输出格式：

在一行中输出给定字符串中包含多少个 PAT。由于结果可能比较大，只输出对 1000000007 取余数的结果。

输入样例：

APPAPT


输出样例：

2


题意：输出字符串中所有‘PAT’的个数，其中P和T可以重复使用。

思路：从左往右数出所有P的个数，再从右往左数出所有T的个数，分别保存在数组中，然后 在对数组中每个字符‘A’，令左边的P和右边T的个数相乘，最后累计的总个数即为所有PAT个数。

参考代码：
--------------------- 
#include<cstdio>
#include<string>
#include<iostream>
using namespace std;
int A[100010],T[100010];
int main()
{
	string s;
	cin>>s;
	long long cnt=0;
	for(int i=0;i<s.size();i++){
		if(i==0&&s[i]=='P') A[i]=1;
		else if(s[i]=='P') A[i]=A[i-1]+1;
		else A[i]=A[i-1];
	}
	for(int i=s.size()-1;i>0;i--){
		if(i==s.size()-1&&s[i]=='T') T[i]=1;
		else if(s[i]=='T') T[i]=T[i+1]+1;
		else T[i]=T[i+1];
	}
	for(int i=0;i<s.size();i++)
		if(s[i]=='A') cnt=(cnt+A[i]*T[i])%1000000007;
	printf("%d\n",cnt);
	return 0;
}
