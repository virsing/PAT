拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：


	每排人数为 N/K（向下取整），多出来的人全部站在最后一排；
	
	
	后排所有人的个子都不比前排任何人矮；
	
	
	每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；
	
	
	每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；
	
	
	若多人身高相同，则按名字的字典序升序排列。这里保证无重名。
	
现给定一组拍照人，请编写程序输出他们的队形。

输入格式：

每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（≤10​4​​，总人数）和 K（≤10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（[30, 300] 区间内的整数）。

输出格式：

输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。

输入样例：

10 3Tom 188Mike 170Eva 168Tim 160Joe 190Ann 168Bob 175Nick 186Amy 160John 159

输出样例：

Bob Tom Joe NickAnn Mike EvaTim Amy John

思路：首先求出每排的人数存放在数组row[]中，然后对所有人按要求排序，再依次把所有人按规则一排一排的存放在二维数组中，最后输出二维数组。 

参考代码：
--------------------- 
#include<cstdio>
#include<iostream>
#include<string>
#include<cmath>
#include<vector>
#include<algorithm>
using namespace std;
int n,k,idx=0;
string ans[20][10010];
struct node{
	int height;
	string name;
}a[10010];
bool cmp(node a,node b){
	if(a.height!=b.height) return a.height>b.height;
	else return a.name<b.name;
}
int main()
{
	scanf("%d%d",&n,&k);
	vector<int> row(k);
	for(int i=k-1;i>=0;i--){	//row存放每排的人数
		if(i!=0)
			row[i]=n/k;
		else row[i]=n-(k-1)*n/k;
	}

	for(int i=0;i<n;i++){
		cin>>a[i].name>>a[i].height;
	}
	sort(a,a+n,cmp);
	for(int i=0;i<k;i++){
		int m=row[i],pos=m/2,p=1,cnt=1;
		ans[i][pos]=a[idx++].name;
		while(cnt<m){
			if(cnt%2==1)
				ans[i][pos-p]=a[idx++].name;
			else {
				ans[i][pos+p]=a[idx++].name;
				p++;
			}
			cnt++;
		}
	}
	for(int i=0;i<k;i++){
		for(int j=0;j<row[i];j++){
			if(j!=0) cout<<" ";
			cout<<ans[i][j];
		}
		cout<<endl;
	}
	return 0;
}
