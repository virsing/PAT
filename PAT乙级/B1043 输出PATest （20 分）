给定一个长度不超过 10
​4
​​ 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 PATestPATest.... 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。
输入格式：
输入在一行中给出一个长度不超过 10
​4
​​ 的、仅由英文字母构成的非空字符串。
输出格式：
在一行中按题目要求输出排序后的字符串。题目保证输出非空。
输入样例：
redlesPayBestPATTopTeePHPereatitAPPT
输出样例：
PATestPATestPTetPTePePee

参考代码：

#include<cstdio>
#include<string>
#include<iostream>
using namespace std;
char hasht[8]={'P','A','T','e','s','t'};
int count[8];
int main()
{
	int total=0,idx=0;
	string s;
	getline(cin,s);
	for(int i=0;i<s.size();i++){
		if(s[i]=='P') {count[0]++;total++;}
		else if(s[i]=='A') {count[1]++;total++;}
		else if(s[i]=='T') {count[2]++;total++;}
		else if(s[i]=='e') {count[3]++;total++;}
		else if(s[i]=='s') {count[4]++;total++;}
		else if(s[i]=='t') {count[5]++;total++;}
	}
	while(total){
		if(count[idx]) {
			printf("%c",hasht[idx]);
			count[idx]--;
			total--;
		}
		idx=(idx+1)%6;
	}
	return 0;
}
