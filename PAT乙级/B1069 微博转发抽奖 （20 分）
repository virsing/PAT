小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。

输入格式：

输入第一行给出三个正整数 M（≤ 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。

注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。

输出格式：

按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 Keep going...。

输入样例 1：

9 3 2Imgonnawin!PickMePickMeMeMeeeLookHereImgonnawin!TryAgainAgainTryAgainAgainImgonnawin!TryAgainAgain

输出样例 1：

PickMeImgonnawin!TryAgainAgain

输入样例 2：

2 3 5Imgonnawin!PickMe

输出样例 2：

Keep going...


思路：首先把所有昵称读入到字符串数组中，然后从给定的位置开始输出获奖id，为了去重可以使用map来做哈希操作。

参考代码：
--------------------- 
#include<cstdio>
#include<string>
#include<iostream>
#include<unordered_map>
using namespace std;
int m,n,s,idx=1;
unordered_map<string,int> mp;
string  ans[1010];
int main()
{
	scanf("%d%d%d",&m,&n,&s);
	for(int i=1;i<=m;i++)
		cin>>ans[i];
	idx=s;
	while(idx<=m){
		while(idx<=m&&mp.count(ans[idx])==1) idx++;
		mp[ans[idx]]=1;
		cout<<ans[idx]<<endl;
		idx+=n;
	}
	if(mp.size()==0) cout<<"Keep going..."<<endl;
	return 0;
}
