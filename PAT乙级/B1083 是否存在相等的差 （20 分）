个人分类： PAT乙级 
编辑 
给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？
输入格式：
输入第一行给出一个正整数 N（2 ≤ N ≤ 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。
输出格式：
按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。
输入样例：

8

3 5 8 6 2 1 4 7
输出样例：

5 2

3 3

2 2
思路：由于只需要输出重复次数大于等于2的差值，因此首先使用一个数组a[]，存储重复次数，下标为差值，然后从大到小遍历，把次数大于1的差值都输出。
参考代码：

#include<cstdio>
#include<vector>
#include<cstring>
#include<string>
#include<iostream>
#include<algorithm>
#include<map>
using namespace std;
int a[10010];
int main()
{
	int n,t;
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%d",&t);
		a[abs(t-i)]++;
	}
	for(int i=n;i>=0;i--)
		if(a[i]>1)
			printf("%d %d\n",i,a[i]);
	return 0;
}
