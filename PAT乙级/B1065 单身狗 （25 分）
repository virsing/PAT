“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。

输入格式：

输入第一行给出一个正整数 N（≤ 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（≤ 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。

输出格式：

首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。

输入样例：

311111 2222233333 4444455555 66666755555 44444 10000 88888 22222 11111 23333

输出样例：

510000 23333 44444 55555 88888

思路：使用连个数组，其中couple[]标记配偶的id，初始全为-1，arrive[]数组标记是否到场，输入完毕后，第一次遍历如果有人没有配偶或者其配偶未到场，则统计单身的计数器num加一，第二次遍历输出这些单身人士id。

参考代码：
--------------------- 
#include<cstdio>
#include<cstring>
using namespace std;
int n,a,b,q,num=0,couple[100010],arrive[100010];
int main()
{
	scanf("%d",&n);
	memset(couple,-1,sizeof(couple));
	for(int i=0;i<n;i++){
		scanf("%d %d",&a,&b);
		couple[a]=b;
		couple[b]=a;
	}
	scanf("%d",&q);
	for(int i=0;i<q;i++){
		scanf("%d",&a);
		arrive[a]=1;
	}
	for(int i=0;i<100000;i++){
		if(arrive[i]&&(couple[i]==-1||(arrive[couple[i]]==0)))	//此人到场，且无配偶或配偶未到，则num+1
			num++;
	}
	printf("%d\n",num);
	for(int i=0;i<100000&&num;i++){
		if(!arrive[i]) continue;
		if(couple[i]==-1||(arrive[couple[i]]==0)){
			printf("%05d",i);
			num--;
			if(num) printf(" ");
		}
	}
	return 0;
}
